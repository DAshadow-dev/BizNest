import React, { useState } from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  Image,
  StyleSheet,
  ScrollView,
  Alert,
  Button
} from 'react-native';
import { Ionicons } from '@expo/vector-icons'; // Import Ionicons
import * as ImagePicker from 'expo-image-picker';
import { useNavigation } from '@react-navigation/native';

const CreateStaffScreen = () => {
  const navigation = useNavigation();

  // State c·ªßa form
  const [fullname, setFullname] = useState('');
  const [email, setEmail] = useState('');
  const [phone, setPhone] = useState('');
  const [role, setRole] = useState('');
  const [image, setImage] = useState('');
  const [imageUrl, setImageUrl] = useState(''); // State cho URL ·∫£nh t·ª´ m·∫°ng

  // Ch·ªçn ·∫£nh t·ª´ th∆∞ vi·ªán
  const pickImage = async () => {
    let result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ImagePicker.MediaTypeOptions.Images,
      allowsEditing: true,
      quality: 1,
    });

    if (!result.canceled) {
      setImage(result.assets[0].uri); // L∆∞u ·∫£nh ƒë√£ ch·ªçn v√†o state
    }
  };

  // X·ª≠ l√Ω l∆∞u nh√¢n vi√™n
  const handleSave = () => {
    if (!fullname || !email || !phone || !role || !image) {
      Alert.alert('L·ªói', 'Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin v√† ch·ªçn ·∫£nh!');
      return;
    }

    const newStaff = {
      fullname,
      email,
      phone,
      role,
      image: image || imageUrl, // Ch·∫•p nh·∫≠n ·∫£nh t·ª´ th∆∞ vi·ªán ho·∫∑c URL
    };

    console.log('Nh√¢n vi√™n m·ªõi:', newStaff);

    Alert.alert('Th√†nh c√¥ng', 'Nh√¢n vi√™n ƒë√£ ƒë∆∞·ª£c th√™m!', [
      { text: 'OK', onPress: () => navigation.goBack() },
    ]);
  };

  return (
    <ScrollView style={styles.container}>
      <View>
        <TouchableOpacity onPress={() => navigation.goBack()}>
          <Ionicons name="arrow-back" size={20} color="black" />
        </TouchableOpacity>
        <Text style={styles.title}>Th√™m Nh√¢n Vi√™n M·ªõi</Text>
      </View>

      <TextInput style={styles.input} placeholder="H·ªç t√™n" value={fullname} onChangeText={setFullname} />
      <TextInput style={styles.input} placeholder="Email" value={email} onChangeText={setEmail} />
      <TextInput style={styles.input} placeholder="S·ªë ƒëi·ªán tho·∫°i" value={phone} onChangeText={setPhone} />
      <TextInput style={styles.input} placeholder="Vai tr√≤" value={role} onChangeText={setRole} />

      <View style={styles.imageContainer}>
        {/* Nh·∫≠p URL ·∫£nh t·ª´ m·∫°ng */}
        <TextInput
          style={styles.input}
          placeholder="Ho·∫∑c nh·∫≠p URL ·∫£nh"
          value={imageUrl}
          onChangeText={(text) => {
            setImageUrl(text);
            setImage(''); // X√≥a ·∫£nh t·ª´ th∆∞ vi·ªán n·∫øu nh·∫≠p URL
          }}
        />

        {/* Hi·ªÉn th·ªã ·∫£nh n·∫øu nh·∫≠p URL */}
        {imageUrl ? (
          <Image source={{ uri: imageUrl }} style={styles.image} />
        ) : null}

        {/* Ch·ªçn ·∫£nh nh√¢n vi√™n t·ª´ th∆∞ vi·ªán */}
        <View style={styles.imageButton}>
          <Button title="Ch·ªçn ·∫£nh" onPress={pickImage} />
        </View>

        {/* Hi·ªÉn th·ªã ·∫£nh ƒë√£ ch·ªçn t·ª´ th∆∞ vi·ªán */}
        {image && <Image source={{ uri: image }} style={styles.image} />}
      </View>

      {/* N√∫t l∆∞u nh√¢n vi√™n */}
      <TouchableOpacity style={styles.saveButton} onPress={handleSave}>
        <Text style={styles.saveButtonText}>L∆∞u Nh√¢n Vi√™n</Text>
      </TouchableOpacity>
    </ScrollView>
  );
};

/** üìå Styles */
const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#fff',
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  input: {
    height: 50,
    borderColor: '#ccc',
    borderWidth: 1,
    borderRadius: 8,
    paddingHorizontal: 15,
    marginBottom: 10,
  },
  imageContainer: {
    marginBottom: 20,
  },
  image: {
    width: '100%',
    height: 150,
    borderRadius: 8,
    marginBottom: 10,
  },
  imageButton: {
    width: '40%',
    fontSize: 16,
    marginBottom: 10,
    marginHorizontal: 10,
  },
  saveButton: {
    backgroundColor: '#007bff',
    paddingVertical: 15,
    borderRadius: 8,
    alignItems: 'center',
    marginBottom: 30,
  },
  saveButtonText: {
    color: 'white',
    fontSize: 18,
    fontWeight: 'bold',
  },
});

export default CreateStaffScreen;
